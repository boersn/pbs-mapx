\documentclass[letterpaper,12pt]{article}
%\VignetteIndexEntry{Introduction to PBSmapx}
%\VignettePackage{PBSmapx}

% Packages
%\usepackage{Sweave}
\usepackage{graphicx}
\usepackage{verbatim,fancyvrb}
\usepackage{hyperref,url,parskip} %,inconsolata}
\usepackage[top=1in, bottom=1in, left=1in, right=1in]{geometry} %  page margins
\usepackage[font=small,format=plain,labelfont=bf,indention=0.25in,labelsep=period,justification=raggedright]{caption}
%\usepackage[font=small,format=plain,labelfont=bf,up,textfont=it,up]{caption}


\usepackage[round]{natbib}
\usepackage{lscape}
\usepackage[utf8]{inputenc}
\usepackage{mathtools}

\raggedright
%\setlength{\hangindent}{0.25in}
\def\noi{\noindent}
\def\noh{\noindent \hangindent=\parindent}
\def\tab{\hspace{0.5 in}}

% For colors
\usepackage{color}
\definecolor{red}{rgb}{0.8039216,0.2156863,0}
\definecolor{green}{rgb}{0, 1, 0}
\definecolor{blue}{rgb}{0, 0, 1}
\definecolor{slategrey}{rgb}{0.4392157, 0.5019608, 0.5647059}
\definecolor{deepskyblue}{rgb}{0, 0.7490196, 1}
\definecolor{gainsboro}{rgb}{0.8627451,0.8627451,0.8627451}
\definecolor{aliceblue}{RGB}{240, 248, 255}
\definecolor{dodgerblue}{RGB}{24, 116, 205}
\definecolor{moccasin}{RGB}{255, 236, 204}

% Definitions
%\newfont{inc}{inconsolata} 
\newcommand{\slan}{{\tt S}}
\newcommand{\rlan}{{\tt R}}
\newcommand{\pbsd}{{\tt PBSdata}}
\newcommand{\pbsf}{{\tt PBSfishery}}
\newcommand{\pbst}{{\tt PBStools}}
\newcommand{\pbsdat}{{\it PBS Data}}
\newcommand{\tcl}{{\tt Tcl/Tk}}

% from RODBC.Rnw
\newcommand{\code}[1]{\texttt{#1}}
\newcommand{\pkg}[1]{\texttt{#1}}
\newcommand{\var}[1]{\emph{#1}}
\newcommand{\link}[1]{#1}
\newcommand{\sQuote}[1]{`#1'}

\newcommand{\gui}[1]{\small\textmd{\textsf{#1}}\normalsize}
\newcommand{\func}[1]{{\textcolor{dodgerblue} {#1}}}
\newcommand{\ital}[1]{{\it #1}}
\newcommand{\bold}[1]{{\bf #1}}
\newcommand{\under}[1]{{\underline {#1}}}

\newcommand{\red}[1]{{\textcolor{red} {#1}}}
\newcommand{\blue}[1]{{\textcolor{blue} {#1}}}
\newcommand{\grey}[1]{{\textcolor{slategrey} {#1}}}
\newcommand{\sky}[1]{{\textcolor{deepskyblue} {#1}}}
%\newcommand{\dfo}[1]{{\colorbox{aliceblue}{\color{slategrey} {#1}}}}
%\colorbox{declared-color1}{\color{declared-color2}{text}}

% from Sweave.Rnw
\hypersetup{%
colorlinks,%
plainpages=true,%
linkcolor=black,%
citecolor=black,%
urlcolor=blue,%
}

\newcommand\pbsfig[3]{    % filename is #1, text is #2, figure height is #3
	%\clearpage
	\begin{figure}[ht!] %[htbp]
	\centering
	\includegraphics[width=6.5in,height=#3in,keepaspectratio=TRUE]{#1.png}
	\caption{#2}\vspace{-2ex}
	\label{fig:#1}
	\end{figure}
	%\vspace{-10ex}
	%\normalsize \bold{Example code for \code{#1}:}
	%\footnotesize
	%\begin{verbatim}
}
\newcommand\pbsfigland[3]{    % filename is #1, text is #2, figure height is #3
	\clearpage
	\begin{figure}[ht] %[htbp]
	\begin{minipage}[c]{4.25in}
	\centering
	\includegraphics[width=3.5in,height=10in,keepaspectratio=TRUE]{#1.png}
	\end{minipage}
	\hspace{0in}
	\begin{minipage}[c]{4.75in}
	\centering
	\includegraphics[width=4.75in,height=10in,keepaspectratio=TRUE]{#2.png}
	\end{minipage}
	\caption{#3}\vspace{-2ex}
	\label{fig:#1}
	\end{figure}
}

\newcommand\pbscode[1]{    % filename is #1  % currently not used
	\vspace{12pt}
	\large \bold{Example code for \code{#1}:}
	\small
	\begin{verbatim}
}
% Coloured box environment
% Source: Manifold @ http://answers.google.com/answers/threadview?id=282787
\makeatletter\newenvironment{dfobox}{%
   \begin{lrbox}{\@tempboxa}\begin{minipage}{\columnwidth}\raggedright}{\end{minipage}\end{lrbox}%
   \colorbox{moccasin}{\usebox{\@tempboxa}}
}\makeatother

% Get rid of all that margin space
\topmargin -0.5in 
\oddsidemargin 0in \evensidemargin 0in
\textheight 9.0in \textwidth 6.5in

\begin{document}

\title{PBSmapx: User's Guide}
\author{Rowan Haigh and Jon T. Schnute}
\maketitle

\section {What is PBSmapx?}

\tab The package \pkg{PBSmapx}, which is short-hand notation for \emph{PBS Map Explore}, provides a convenient Graphical User Interface (GUI) tool for interacting with \pkg{PBSmapping}. The primary mapping function \code{createMap} presents a menu system for plotting topographical files as well as output from gridding and summary routines for geo-referenced data such as catch, effort, and catch per unit effort (CPUE). The underlying R code is somewhat convoluted; however, the user can largely ignore the code and simply manipulate the entries in the GUI menu. Though designed for users at the Pacific Biological Station (PBS), the GUI has proven useful for users at other locales.

\tab \pkg{PBSmapx} depends on the R package \pkg{PBStools}, which in turn depends on four other R packages: \pkg{PBSmapping} \citep{Schnute-etal:2004b,Boers-etal:2004}, \pkg{PBSmodelling} \citep{Schnute-etal:2006}, \pkg{PBSdata}, and \pkg{RODBC}. We use \pkg{PBSmodelling} to implement the GUI. Originally, \pkg{PBSmapx} evolved over time (2007--2012) within the R package \pkg{PBSfishery} (found on Google's Project Hosting site: \url{http://code.google.com/p/pbs-fishery/}), along with useful datasets (regional boundaries, key codes, example data) and handy utility functions. In April 2012, we decided to split \pkg{PBSfishery} into three separate libraries -- \code{PBSmapx}, \code{PBSdata}, and \code{PBStools} -- for distribution on CRAN.

\section {What is PBS?}

\tab The Pacific Biological Station is the oldest fisheries research centre on Canada's Pacific coast and forms part of a network of nine major scientific facilities operated by Fisheries and Oceans Canada. Located in Nanaimo, British Columbia, the Station is home to scientists, technicians, support staff and ships' crews whose common interests are the coastal waters of British Columbia, the Northeast Pacific Ocean, the Western Arctic and navigable waters east to the Manitoba, Saskatchewan border.

\tab PBS was established in 1908 and is the principal centre for fisheries research on the West Coast. There are some 22 structures on the site including a four-story office/wet lab building, specialty storage structures for hazardous chemicals and salt water pumping facilities. PBS maintains a number of workshops for research support. There is a wharf used for loading, unloading, and berthage of research vessels, as well as a small boat dock for inshore research boats. PBS also maintains a library and meeting facilities. Aquatic facilities, primarily used by Aquaculture Science, include ambient temperature and heated salt water and fresh water. 

\tab Research at PBS responds to stock assessment, aquaculture, marine environment, habitat, ocean science, and fish productivity priorities. Some fisheries management activities are also conducted here. 

\begin{figure}[h!]
	\centering
	\includegraphics[width=10cm]{PBS.png}
	\quad
	\caption{Pacific Biological Station (PBS), Nanaimo BC}
	\label{fig:PBS}
\end{figure}

For more information, see:\\ \footnotesize
\url{http://www.pac.dfo-mpo.gc.ca/science/facilities-installations/pbs-sbp/index-eng.htm}. \normalsize

\section {Mapping GUI}

\tab The mapping GUI (Figure~\ref{fig:GUI-startup}), whimsically called \sQuote{de P\^{e}che Mode} after the 1980s New Wave band from England called Depeche Mode\footnotemark, is created by a call to \code{createMap} from the R console. It defaults to spatial limits \code{(X,Y)} that display the BC coast using the \pkg{PBSmapping} data object \code{nepacLL}, which the user can change to another coastline object. The user can also switch between two projections: \gui{LL} = geographic (degrees longitude and latitude) and \gui{UTM} = Universal Transverse Mercator (km).

\footnotetext{
Excerpt from Wikipedia's article on Depeche Mode (\url{http://en.wikipedia.org/wiki/Depeche_mode}):\\
When explaining the choice for the new name (taken from a French fashion magazine, D\'{e}p\^{e}che mode) Martin Gore (keyboards, guitar, vocals, chief songwriter after 1981) has said, \emph{It means hurried fashion or fashion dispatch. I like the sound of that.} Rowan agreed, and so de P\^{e}che Mode was born as a GUI that can be loosely translated as \emph{Fishing Method}, \emph{Fishery Dispatch}, or even more facetiously, \emph{Fishery Fashion}.
}

%Figure: GUI-startup
\pbsfig{GUI-startup}{de P\^{e}che Mode GUI generated by \code{createMap()}. Specify coast line object at top and choose spatial and temporal limits on left. Also in box on left, user can choose various topographical features. Right side of GUI controls the data input to be mapped either as tow points, proportional bubbles, or summary statistics in grid cells.}{5.0}

\tab In the control box on the left, the spatial (\gui{X}~= horizontal, \gui{Y}~= vertical, \gui{Dep}~= Depth) and temporal (\gui{YMD}~= Year-Month-Day) limits can be adjusted as needed. The remaining items in the control box on the left refer to BC geographic data objects that delimit management boundaries (not necessarily official), survey regions, and isobaths from 100 to 1800~m at 100~m intervals. Below the control box, a user can change the dimensions of the grid cells Should s/he decide to locate and summarize events in a grid that overlays the display region. These events come from a geo-referenced data object specified by the entry box \gui{File}.

\tab On the right, various controls coordinate the display of geo-referenced data like catch, effort, and catch per unit effort (CPUE). In the development of this mapping tool, we found that users typically organise their data in one of two ways or shapes \citep{Bolker:2008}. The first is to allow one record per event (e.g., trawl tow) detailing the specifics of that event (e.g., \code{effort}, \code{depth}, etc.) with additional columns labelled by species that contain the catch of that species in the event. The species catches are said to be \sQuote{arranged by column}, and the table structure approximates a crosstab query in Access or a pivot table in Excel. (Bolker refers to this format as \sQuote{wide}.) The second type of data structure has only one column for species catch, an additional column for species code, and event information repeated numerous times depending on the number of species caught in a particular event. In this case we say that the species catches are \sQuote{arranged by row}, and the table structure has fewer fields but many more records containing a lot of redundant information. (Bolker refers to this format as \sQuote{long} or \sQuote{indexed}). We encourage users to organise their data so that species catches are arranged by column (wide format), but the option exists for both structures. R provides a few tools for conversion between the two formats (\code{stack} and \code{unstack} in the \pkg{utils} package; \code{reshape} in the \pkg{stats} package; \code{melt}, \code{cast}, and \code{recast} in the \pkg{reshape} package). Additionally, the package \pkg{PBStools} offers a \code{crossTab} function that uses the \pkg{reshape} functions \code{melt.data.frame} and \code{cast} to reproduce the \sQuote{wide} format similar to a Microsoft SQL crosstab query.

\vspace*{2ex} 
\begin{dfobox} % see code from Manifold above
\color{blue}
\bold{DFO:}\\
A basic data object for a single species can be obtained using the \pkg{PBStools} function \code{getData} and the SQL code file \code{pht\_map.sql}:
\begin{Verbatim}[formatcom=\color{dodgerblue},fontsize=\small]

getData("pht_map.sql","PacHarvest",strSpp="396",path=.getSpath(pkg="PBSmapx"))

\end{Verbatim}
which creates a global data object, in this case for Pacific Ocean Perch, called \code{PBSdat} that the user can rename to whatever s/he wishes. Note the hidden function \code{.getSpath} from the package \pkg{PBStools}. Essentially, this function gets the path to the \pkg{PBSmapx} directory called \code{sql}. For example, this might evaluate to: \code{C:/Program~Files/R/R-2.15.1/library/PBSmapx/sql} on a user's system. We maintain a few SQL code files here but a much larger collection exists in the \code{sql} directory of \pkg{PBStools}. These can be treated as templates by users at other institutions even though they were designed specifically for users at PBS.
\end{dfobox}

\tab The \gui{FID} (fishery ID) options include trawl (\gui{trawl}), halibut (\gui{halibut}), sablefish (\gui{sable}), dogfish/lingcod (\gui{dog/lin}), and hook and line rockfish (\gui{HLrock}).

\tab Once a data object has been selected, the user chooses various fields that contains values to display on the map (where land colour is controlled by the entry box labelled \gui{land}). The usual candidates for groundfish trawl data are longitude \code{X}, latitude \code{Y}, and some \code{Z} value, often \code{catch}, \code{effort}, or \code{cpue} (catch per unit effort can be calculated from \code{catch} and \code{effort} if absent from the dataset). Not surprisingly, all users have their preferences on what to call fishery data fields. The code expects certain fields to be available and attempts to try obvious candidate substitutions if the required fields do not exist (Table~\ref{tab:GUI-inputs}). For the Z-value alone, the symbol $>$ to the right of the \gui{Z} entry box provides a pop-up menu choice of data fields should the user wish to peruse and choose an available field.

%\vspace*{2ex}
%\noi \textbf{Table 1.} Candidate substitutions for various GUI inputs. \\[2ex]
\begin{table}[ht!]
  \caption{Candidate substitutions for various GUI inputs.}
  \begin{center}
    \begin{tabular}{cp{4.0in}}
    \hline
    Default & Substitutes fields (in preferential order) \\
    \hline
    \code{X}      & \code{longitude}, \code{long}, \code{lon}, \code{x} \\
    \code{Y}      & \code{latitude}, \code{lat}, \code{y} \\
    \code{X2}     & \code{X}, \code{longitude}, \code{long}, \code{lon}, \code{x} \\
    \code{Y2}     & \code{Y}, \code{latitude}, \code{lat}, \code{y} \\
    \code{fdep}   & \code{depth}, \code{depth1}, \code{fishdepth}, \code{Z}, \code{z} \\
    \code{cfv}    & \code{CFV}, \code{vessel}, \code{boat}, \code{ship} \\
    \code{spp}    & \code{species}, \code{sp}, \code{hart}, \code{code} \\
    \code{catch}  & \code{cat}, \code{total}, \code{tcat}, \code{landed}, \code{land}, \code{kept}, \code{discarded}, \code{discards}, \code{discard}, \code{C} \\
    \code{effort} & \code{eff}, \code{duration}, \code{time}, \code{hours}, \code{minutes}, \code{E} \\
    \code{cpue}   & \code{CPUE}, \code{U} \\
    \hline
    \end{tabular} %\\[3ex]
  \end{center}
  \label{tab:GUI-inputs}
\end{table}

\tab The user has three choices on how to display fishing event data. The first is to plot the fishing event locations as points by checking the box labelled \gui{tows}. The point size can be controlled by changing the value in the entry box labelled \gui{tsize}. Normally, tow location is most consistently represented by the start position (\gui{X},\gui{Y}); however, the user may wish to use either the end position (\gui{X2},\gui{Y2}) or a vectorized blend between (\gui{X},\gui{Y}) and (\gui{X2},\gui{Y2}). The latter comes in handy for gridding analyses when parsing \code{Z} values out over a simplified tow track.

\tab Second, Z-values can be rendered as bubbles (\gui{bubbs}) proportional to their magnitude. The function \code{symbols} takes radii of circles to construct bubbles, so a square root transformation of Z (\gui{pow}=0.5 in the GUI) most closely represents \gui{Z} proportional to the area of the bubble. The maximum bubble size can be adjusted by changing the value in the entry box labelled \gui{psize}.

\tab Third, Z-values can be aggregated into pre-defined grid cells (\gui{cells}), and a summary function (\gui{FN}) like \code{mean} can be applied to each set of values in all cells that contain at least one event. (This summary function could be a highly complicated, user-defined algorithm, as long as it exists in the global environment.) With the gridding option, a user sometimes likes to track an associated variable not used in the analysis (\gui{track}). For instance, if we grid the mean CPUE and only display those cells that contain at least 10 distinct commercial fishing vessels (\gui{CFV per cell}), which CFVs have been retained in the analysis? The button marked \gui{[~]} will display a pop-up box of unique CFVs. There are also check boxes to (i)~exclude records where the values of \gui{Z} are either 0 (\gui{excl 0}) and/or negative (\gui{ex -ve}), (ii)~add a legend (\gui{leg}) detailing the grid categories and map title, and (iii)~add area calculation summaries (\gui{km}) to the legends. At any time, the user can see the entire grid used for analysis by checking the box labelled \gui{grid}, though this display will not often be desired.

\tab The gridding option also needs some way to categorize the summary data so that the cells can be colour-coded accordingly. The default is to use quantiles that emphasize hotspots (\gui{Qhi}). There is also an option the chooses evenly-spaced quantiles (\gui{Qeq}). These automatic options are handy to get a feel for the scale of the summarized Z-values. Once the scale is known, the user has the option to specify six fixed break points (\gui{F}) to form five colour-coded categories. As biological data seem to exhibit skewed distributions (e.g.,~log-normal, gamma, pareto), the user could choose fixed values that follow some logarithmic pattern (e.g.,~0, 0.1, 1, 10, 100, 1000) to display the categorical groups. 

\tab The colour coding for points, bubbles, and grid cells can be controlled using the entry boxes marked \gui{bg} (background) and \gui{fg} (foreground). There is also a button marked \gui{Re-Col} that lets the user re-colour the events of an existing plot if the chosen colours aren't quite right. This can save time redrawing the map from scratch, especially if the user has chosen to perform a gridding exercise with a large number of fishing events. For points and bubbles, pressing the \gui{Re-Col} button will change the interior of the shapes to the \gui{bg} colour and the borders to the \gui{fg} colour. For grid cells, the border colours remain fixed in light grey, and the colour gradient over the range of categories ranges from \gui{bg} to \gui{fg}.

To see a demo of \code{createMap}, cut and paste the command below into the R console:
\begin{Verbatim}[formatcom=\color{dodgerblue},fontsize=\small]
createMap(hnam=paste(.getWpath(pkg="PBSmapx"),"mapHist.txt",sep="/"))
\end{Verbatim}

\tab This function call taps into a demo history file. (For details on the \code{history} widget, see the \pkg{PBSmodelling} user's guide.) Press the \code{history} navigation button $>$ to scroll forward through 10 GUI settings and their results (see Figures below). Plotting to the R graphics device is automatic for the demo. Once you're ready to use your own data and settings, most times you need only hit the green \gui{GO} button (lower right corner). At any time, you can hit one of the figure output buttons marked \gui{EPS} (encapsulated postscript), \gui{PNG} (portable network graphics), or \gui{WMF} (windows metafile) to create a figure file based on the GUI settings. Very occasionally, you may want to force explicit refresh steps (blue buttons: \gui{Mfile} = make the master data object; \gui{Qfile} = make the qualified data object; \gui{Mgrid} = make the master grid object; \gui{Gevent} = get the EeventData set; \gui{Fcell} = find the events in the cells) if you are having trouble. Enquiring minds can see the complete code by pressing the button labelled \gui{R code} located in the upper right corner of the GUI.

\tab Down in the lower left of the GUI, are a few additional buttons labelled \gui{par\.map}, \gui{GOP}, and \gui{LOP}. The first button allows the user to exercise additional par control that is not available through the GUI. These details are presented in the next section. The button labelled \gui{GOP} simply stands for \sQuote{Grid Over Plot} and can be used to force plotting of coloured grid cells over everything. This action is only temporary so that a user can visually check how many grid cells are being masked by land. This only happens when the original data have badly-specified geographic coordinates. The button labelled \gui{LOP} (Land Over Plot) forces plotting of coloured land over everything. This might come in handy when the user is manually adding PolySets or other information to the plot and wishes to mask out the regions where land occurs.

\tab A global list object called \code{PBSmap} is returned packed with results and/or intermediate data objects. These can be handy for debugging or further analysis and plotting. This global list object differs in name from the standard used in \pkg{PBStools}, where functions typically return an object called \pkg{PBStool}. 

\section {Additional parameter control}

\tab After a call to \code{createMap}, a list of additional \code{par} parameters is created (Table~\ref{tab:parmap}). These additional parameters can be controlled from the GUI by hitting the \code{par.map} button, located near the lower left corner. The button uses the function \code{dataentry} from the \pkg{utils} package, which opens a spread-sheet like editor. (Not all operating systems may be able to use this.) Alternatively, the user can control these parameters at any point during the interactive mapping session using the \pkg{PBSmodelling} functions \code{getPBSoptions} and \code{setPBSoptions}.

\bold{Manual control}: On the command line, \code{getPBSoptions("par.map")} displays the list of additional parameters. One or more of the parameters can be changed by \code{setPBSoptions} using the following format as an example:
\begin{Verbatim}[formatcom=\color{dodgerblue},fontsize=\small]
setPBSoptions("par.map",list(mgp=c(3,1,0),cex.txt=1.2),sublist=TRUE)
\end{Verbatim}

\begin{table}[t!]
  \caption{Additional parameter controls.}
  \begin{center}
    \begin{tabular}{cp{5in}}
    \hline
    \code{par} & \bold{Parameter description} \\
    \hline
    \code{plt}    & A vector of the form \code{c(x1,x2,y1,y2)} giving the coordinates of the plot region as fractions of the current figure region.\\
                  & \emph{default}:~\code{c(0.08,0.99,0.08,0.99)}. \\
  \code{mgp}      & The margin line (in \code{mex} units) for the axis title, axis labels and axis line. Note that \code{mgp[1]} affects the title whereas \code{mgp[2:3]} affect the axes. \emph{default}:~\code{c(2.75,0.5,0)}.\\
  \code{las}      & A numeric in \code{c(0,1,2,3)} specifying the style of axis labels:\\
                  & \code{las=0} labels always parallel to the axis (\emph{default});\\
                  & \code{las=1} labels always horizontal;\\
                  & \code{las=2} labels always perpendicular to the axis;\\
                  & \code{las=3} labels always vertical.\\
  \code{cex.axis} & The magnification (\emph{default}:~1.2) to be used for axis annotation relative to the current setting of \code{cex}.\\
  \code{cex.lab}  & The magnification (\emph{default}:~1.75) to be used for x and y labels relative to the current setting of \code{cex}.\\
  \code{cex.txt}  & Not technically a \code{par} parameter but it denotes the magnification (\emph{default}:~0.9) of the upper right text relative to the current setting of \code{cex}.\\
  \code{cex.leg}  & Not technically a \code{par} parameter but it denotes the magnification (\emph{default}:~0.9) of the lower left legend relative to the current setting of \code{cex}.\\
  \code{pin}      & Reports the calculated dimensions (width, height) of the displayed plot, which the function uses to scale an output file (where maximum dimensions are 7.5in for \code{PNG} and 10in for \code{EPS} and \code{WMF}).\\
                  & \bold{Note:}~Altering the \code{pin} has no effect.\\
  \code{tit.loc}  & Specifies where the title box can be placed using one of \code{legend}'s keywords: \code{c("bottomright", "bottom", "bottomleft", "left", "topleft", "top", "topright", "right", "center")}.\\
  \code{leg.loc}  & Specifies position of colour-coded legend using relative \code{c(x,y)} coordinates \code{0:1}.\\
  \code{leg.font} & Specifies legend font (e.g., 1=normal, 2=bold) within the \code{mono} family.\\
    \hline
    \end{tabular} %\\[3ex]
  \end{center}
  \label{tab:parmap}
\end{table}

\clearpage
\section{GUI demo}

\tab The following pages display results from the \pkg{PBSmapx} demo, which can be run by issuing the following command:
\begin{Verbatim}[formatcom=\color{dodgerblue},fontsize=\small]
createMap(hnam=paste(system.file(package="PBSmapx"),"/win/mapHist.txt",sep="")) 
\end{Verbatim}
or more simply:
\begin{Verbatim}[formatcom=\color{dodgerblue},fontsize=\small]
demo(D01_map)
\end{Verbatim}

\begin{landscape}
\pbsfigland{GUI-ex01}{PBSmapx-ex01}{Pacific Ocean Perch (\emph{Sebastes alutus}) tow locations in 1996.}
\pbsfigland{GUI-ex02}{PBSmapx-ex02}{Pacific Ocean Perch CPUE (km/h) proportional to bubble size.}
\pbsfigland{GUI-ex03}{PBSmapx-ex03}{Pacific Ocean Perch mean CPUE (km/h) represented by coloured grid cells.}
\pbsfigland{GUI-ex04}{PBSmapx-ex04}{Pacific Ocean Perch CPUE (km/h) in UTM (\code{X},\code{Y}) space.}
\pbsfigland{GUI-ex05}{PBSmapx-ex05}{Longspine Thornyhead (\emph{Sebastolobus altivelis}) mean CPUE (km/h) for the period 1996--2007.}
\pbsfigland{GUI-ex06}{PBSmapx-ex06}{Dover Sole (\emph{Microstomus pacificus}) mean CPUE (km/h) for 1996.}
\pbsfigland{GUI-ex07}{PBSmapx-ex07}{Dover Sole as in Fig.~\ref{fig:GUI-ex06} but displaying only cells where $\ge$5 vessels were active.}
\pbsfigland{GUI-ex08}{PBSmapx-ex08}{Mean CPUE (km/h) for Pacific Ocean Perch and Dover Sole combined in 1996.}
\pbsfigland{GUI-ex09}{PBSmapx-ex09}{POP and Dover Sole CPUE as in Fig.~\ref{fig:GUI-ex08} but represented as bubbles at each tow location.}
\pbsfigland{GUI-ex10}{PBSmapx-ex10}{Position of tows capturing POP and/or Dover Sole in 1996.}
\end{landscape}



%-----CONTACT-----
\section* {Contact Information}

%\vspace*{4ex} \noindent {\bf \Large Contact}\\
\vspace*{0ex} \noindent \blue{{\bf \normalsize Rowan Haigh}}\\
\small
\grey{Research Biologist, Groundfish Section\\
Marine Ecosystems and Aquaculture Division\\
Fisheries and Oceans Canada\\
Pacific Biological Station, Nanaimo, BC  V9T 6N7}\\
\sky{Tel. +1 250-756-7123  fac simile +1 250-756-7053\\
Email rowan.haigh@dfo-mpo.gc.ca} 
\normalsize

%\vspace*{4ex} \noindent {\bf \Large References}

\bibliographystyle{jss}
\bibliography{PBSrefs}


\end{document}

